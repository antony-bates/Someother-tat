blueprint:
  name: ZHA - Moes Smart Knob for lights with Helper Mapping
  description: 'Control lights with a Moes Smart Knob, with helper-based dynamic light control.
    You can set functions for a single press. This allows you to assign, e.g., a scene or anything else.
    Rotating left/right will change the brightness smoothly of the selected light.
    
    Not all functionality of the device is available at the time of writing, e.g. double press, long press, and press and rotate.'

  domain: automation
  input:
    remote:
      name: Remote
      description: Moes Knob to use
      selector:
        device:
          integration: zha
          manufacturer: _TZ3000_qja6nq5z
          model: TS004F
    single_press:
      name: Single press
      description: Action to run on single press
      default: []
      selector:
        action: {}
    light_name:
      name: Light Name
      description: "Select the light by a human-readable name from the input helper"
      selector:
        entity:
          domain: input_select
    mapping:
      name: Helper to Light Mapping
      description: "Map helper entity to the corresponding light entity"
      selector:
        select:
          options: !input 'light_name'
    source_url: https://gist.github.com/seamus65/939a147634942dd885c8704334627f93
  mode: restart
  max_exceeded: silent
  trigger:
    platform: event
    event_type: zha_event
    event_data:
      device_id: !input 'remote'
  action:
  - variables:
      command: '{{ trigger.event.data.command }}'
      cluster_id: '{{ trigger.event.data.cluster_id }}'
      args: '{% if trigger.event.data.args[0] == 0 %} 0 {% elif trigger.event.data.args[0] == 1 %} 1 {% elif trigger.event.data.args[0] == 3 %} 3 {% endif %}'
      light_entity: '{{ state_attr(input_select.mapping.state, "option") }}'
  - choose:
    - conditions:
      - '{{ command == ''toggle'' }}'
      - '{{ cluster_id == 6 }}'
      sequence: !input 'single_press'
    - conditions:
      - '{{ command == ''step'' }}'
      - '{{ cluster_id == 8 }}'
      - '{{ args == 0 }}'
      sequence:
      - repeat:
          while:
          - condition: template
            value_template: "{{ repeat.index < 2 }}"
          sequence:
          - service_template: light.turn_on
            target: '{{ light_entity }}'
            data_template:
              brightness_step_pct: 5
              transition: 0.5
    - conditions:
      - '{{ command == ''step'' }}'
      - '{{ cluster_id == 8 }}'
      - '{{ args == 1 }}'
      sequence:
      - repeat:
          while:
          - condition: template
            value_template: "{{ repeat.index < 2 }}"
          sequence:
          - service_template: light.turn_on
            target: '{{ light_entity }}'
            data_template:
              brightness_step_pct: -5
              transition: 0.5
    - conditions:
      - '{{ command == ''step_color_temp'' }}'
      - '{{ cluster_id == 768 }}'
      - '{{ args == 1 }}'
      sequence:
      - repeat:
          while:
          - condition: template
            value_template: "{{ repeat.index < 2 }}"
          sequence:
          - service_template: light.turn_on
            target: '{{ light_entity }}'
            data_template:
              brightness_step_pct: 20
              transition: 0.5
    - conditions:
      - '{{ command == ''step_color_temp'' }}'
      - '{{ cluster_id == 768 }}'
      - '{{ args == 3 }}'
      sequence:
      - repeat:
          while:
          - condition: template
            value_template: "{{ repeat.index < 2 }}"
          sequence:
          - service_template: light.turn_on
            target: '{{ light_entity }}'
            data_template:
              brightness_step_pct: -20
              transition: 0.5
